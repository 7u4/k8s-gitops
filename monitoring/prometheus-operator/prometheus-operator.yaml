---
apiVersion: flux.weave.works/v1beta1
kind: HelmRelease
metadata:
  name: prometheus-operator
  namespace: monitoring
  annotations:
    flux.weave.works/automated: "true"
    flux.weave.works/tag.grafana: semver:~6

spec:
  releaseName: prometheus-operator
  chart:
    repository: https://kubernetes-charts.storage.googleapis.com/
    name: prometheus-operator
    version: 6.7.3
  values:
    prometheusOperator:
      createCustomResource: true
    alertmanager:
      alertmanagerSpec:
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: rbd
              resources:
                requests:
                  storage: 10Gi
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: "nginx"
          nginx.ingress.kubernetes.io/auth-type: "basic"
          nginx.ingress.kubernetes.io/auth-secret: "nginx-basic-auth-jeff"
    grafana:
      image:
        repository: grafana/grafana
        tag: 6.3.6
      deploymentStrategy:
        type: Recreate
      persistence:
        enabled: true
        storageClassName: "rbd"
        accessModes:
        - ReadWriteOnce
        size: 10Gi
      env:
        GF_EXPLORE_ENABLED: true
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: "nginx"
      plugins:
      - natel-discrete-panel
      dashboards:
        default:
          nginx-dashboard:
            url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
      additionalDataSources:
      - name: loki
        type: loki
        access: proxy
        url: http://loki.logs.svc.cluster.local:3100
      - name: influxdb
        type: influxdb
        access: proxy
        url: http://influxdb:8086
        database: telegraf
      - name: cable_modem_stats
        type: influxdb
        access: proxy
        url: http://influxdb:8086
        database: cable_modem_stats
      - name: comcast
        type: influxdb
        access: proxy
        url: http://influxdb:8086
        database: comcast
      - name: home_assistant
        type: influxdb
        access: proxy
        url: http://influxdb:8086
        database: home_assistant
      - name: speedtests
        type: influxdb
        access: proxy
        url: http://influxdb:8086
        database: speedtests
      - name: uptimerobot
        type: influxdb
        access: proxy
        url: http://influxdb:8086
        database: uptimerobot
      grafana.ini:
        paths:
          data: /var/lib/grafana/data
          logs: /var/log/grafana
          plugins: /var/lib/grafana/plugins
          provisioning: /etc/grafana/provisioning
        analytics:
          check_for_updates: true
        log:
          mode: console
        grafana_net:
          url: https://grafana.net
    kubeEtcd:
      enabled: true
      endpoints:
      - 10.2.0.10
      - 10.2.0.11
      - 10.2.0.12
      service:
        port: 2379
        targetPort: 2379
    prometheus-node-exporter:
      tolerations:
      - key: "node-role.kubernetes.io/etcd"
        operator: "Exists"
      - key: "node-role.kubernetes.io/controlplane"
        operator: "Exists"
    prometheus:
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: "nginx"
          nginx.ingress.kubernetes.io/auth-type: "basic"
          nginx.ingress.kubernetes.io/auth-secret: "nginx-basic-auth-jeff"
      prometheusSpec:
        retention: 30d
        enableAdminAPI: true
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: rbd
              resources:
                requests:
                  storage: 100Gi
        additionalScrapeConfigs:
        - job_name: 'netdata-scrape'
          metrics_path: '/api/v1/allmetrics'
          params:
              # format: prometheus | prometheus_all_hosts
              # You can use `prometheus_all_hosts` if you want Prometheus to set the `instance` to your hostname instead of IP 
            format: [prometheus]
          honor_labels: true
          static_configs:
          - targets:
            - proxmox:19999
            - proxmox-b:19999
            - proxmox-c:19999
            - lb:19999
            - pihole:19999
            - k8s-master-a:19999
            - k8s-master-b:19999
            - k8s-master-c:19999
            - k8s-1:19999
            - k8s-2:19999
            - k8s-3:19999
            - k8s-4:19999
        - job_name: 'wmi-exporter-scrape'
          metrics_path: '/metrics'
          params:
            format: [prometheus]
          honor_labels: true
          static_configs:
          - targets:
            - nvr:9182
        - job_name: 'hass'
          scrape_interval: 60s
          metrics_path: /api/prometheus
          bearer_token: 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJiM2FjNjVlNjQ1OTU0NWNhOWJiZWZiZDE5OWM4MDMzMiIsImlhdCI6MTU2NzEyODYwOCwiZXhwIjoxODgyNDg4NjA4fQ.NkSaaxMnJMYy-38gBsdlKt35-aKKSMDofGzBeBQmVnw'
          scheme: http
          static_configs:
          - targets: ['hass-home-assistant.default.svc:8123']
  valueFileSecrets:
  - name: "prometheus-operator-helm-values"
