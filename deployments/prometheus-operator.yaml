---
apiVersion: flux.weave.works/v1beta1
kind: HelmRelease
metadata:
  name: prometheus-operator
  namespace: default
  annotations:
    flux.weave.works/automated: "true"
    flux.weave.works/tag.alertmanager.alertmanagerSpec: semver:~0
    flux.weave.works/tag.prometheus.prometheusSpec: semver:~2
    flux.weave.works/tag.grafana: semver:~6
spec:
  releaseName: prometheus-operator
  chart:
    repository: https://kubernetes-charts.storage.googleapis.com/
    name: prometheus-operator
    version: 5.7.0
  values:
    alertmanager:
      alertmanagerSpec:
        image:
          repository: quay.io/prometheus/alertmanager
          tag: v0.16.2
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: "traefik"
          ingress.kubernetes.io/auth-type: "forward"
          ingress.kubernetes.io/auth-url: "http://auth0-forwardauth.kube-system.svc.cluster.local/authorize"
          ingress.kubernetes.io/auth-trust-headers: "true"
      persistentVolume:
        enabled: true
        storageClass: "rbd"
    grafana:
      image:
        repository: grafana/grafana
        tag: 6.1.6
      deploymentStrategy: Recreate
      persistence:
        enabled: true
        storageClassName: "rbd"
        accessModes:
        - ReadWriteOnce
        size: 10Gi
      env:
        GF_EXPLORE_ENABLED: true
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: "traefik"
      grafana.ini:
        paths:
          data: /var/lib/grafana/data
          logs: /var/log/grafana
          plugins: /var/lib/grafana/plugins
          provisioning: /etc/grafana/provisioning
        analytics:
          check_for_updates: true
        log:
          mode: console
        grafana_net:
          url: https://grafana.net
    coreDns:
      enabled: false
    kubeDns:
      enabled: true
    prometheus:
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: "traefik"
          ingress.kubernetes.io/auth-type: "forward"
          ingress.kubernetes.io/auth-url: "http://auth0-forwardauth.kube-system.svc.cluster.local/authorize"
          ingress.kubernetes.io/auth-trust-headers: "true"
      persistentVolume:
        enabled: true
        storageClass: "rbd"
        size: 30Gi
      prometheusSpec:
        image:
          repository: quay.io/prometheus/prometheus
          tag: v2.9.1
        additionalScrapeConfigs:
        - job_name: 'netdata-scrape'
          metrics_path: '/api/v1/allmetrics'
          params:
              # format: prometheus | prometheus_all_hosts
              # You can use `prometheus_all_hosts` if you want Prometheus to set the `instance` to your hostname instead of IP 
            format: [prometheus]
          honor_labels: true
          static_configs:
          - targets:
            - proxmox:19999
            - proxmox-b:19999
            - proxmox-c:19999
            - lb:19999
            - pihole:19999
            - k8s-master-a:19999
            - k8s-master-b:19999
            - k8s-master-c:19999
            - k8s-1:19999
            - k8s-2:19999
            - k8s-3:19999
        - job_name: 'stash-scrape'
          metrics_path: '/metrics'
          params:
            format: [prometheus]
          honor_labels: true
          static_configs:
          - targets:
            - stash.kube-system:56789
        - job_name: 'wmi-exporter-scrape'
          metrics_path: '/metrics'
          params:
            format: [prometheus]
          honor_labels: true
          static_configs:
          - targets:
            - nvr:9182
  valueFileSecrets:
  - name: "prometheus-operator-values"
